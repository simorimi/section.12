Global 'window' Object(Built-in Variables & Functions)
└ Holds information and functionality related to the active browser window / tab
└ 윈도우 객체 내에 내장된 모든 것은 실제로 브라우저에서 전역 변수나 함수로 사용할 수 있다. window 객체의 예외사항은 window.없이 사용할 수 있다.
ex) alert();

The 'document' Object(window document)
└ 중첩객체(객체안의 객체), Holds information and functionality to the loaded website content

DOM(Document Object Model)
└ The data representation of the parsed HTML code
└ The browser parses our HTML code and saves all elements as JavaScript Objects → Our JavaScript code is able to interact with the DOM and extract data from it or manipulate it
└ 페이지의 요소를 선택하고 조작하고 페이지에 표시되는 HTML 요소와 그 스타일을 조작하기 위해서 자바스크립트를 사용해 변경할 수 있다.

console.dir을 통해 내장된 객체를 볼 수 있다.

defer
└ boolean, 전체 문서가 분석이 될 때까지 스크립트 실행이 지연되어야 한다고 브라우저에게 알려줌

DOM 탐색
- Drill into Elements
└ have to know the DOM structure and if it changes, code needs to change as well

- Query Elements
└ Selecting elements works like in CSS and hence no exact DOM structure knowledge is required
└ getElementById(Id요소만 이때 Id 이름 #없이 바로 쓴다.) or querySelector(CSS선택자 이 경우 CSS 선택자 쓰듯 쓴다.)
└ querySelector의 경우 선택자 중 가장 첫 번째 요소를 선택한다. 해당 요소 모두를 사용하기위해서는 querySelectorAll을 사용한다.
└ 이외 getElementByClassName('')은 제공된 클래스 모두를 선택하고 getElementByTagName의 경우 제공된 HTML 태그 유형의 모든 HTML 요소를 선택한다.
child와 elementchild, childnodes 와 children이 다른 이유는 node 안에는 element이외에 text들이 있기때문

object는 파란색 method는 노란색 method의 경우 ()를 사용한다.

element add
- createElement('해당 element' 작은 따옴표 필요!)로 추가 후 해당 parent element에 append를 통해 추가

element remove
- 해당 element에 remove()추가 이때 () 안에 아무것도 들어가지 않는다.

element move
- inserBefore(삽입할 노드, 기준 노드)를 이용한다. 만약 맨 마지막에 추가를 원한다면 append를 통해 뒤에 추가하면 된다.

innerHTML ⊃ textcontent
- innerHTML의 경우 textcontent와 다른 HTML 요소를 포함해서 접근 할 수 있게 해준다. 그래서 값 입력시에도 ''안에 <>요소를 다 써준다.

innerHTML을 사용하여 새 element를 만들어도 되지만 createElement를 하는 이유는 생산된 요소에 직접 액세스 할 수 있어 속성 및 매서드를 통해 요소를 구성할 수 있다.(이벤트 리스너 추가)

addEventListener('event', function) - method 
- function 자리에 구문을 쓸 수 없다.
- 이 function을 callback function이기에 ()를 없이 사용한다. () 있게 되면 이벤트 발생 때 쓰는게 아닌 그 즉시 실행한다는 의미.
- 일회성이 아닌 다회성이다.

callback function: A function that is passed as a parameter value to another function or method("to be executed in the future")
└ 다른 함수나 메소드에 매개변수 값으로 전달되는 함수

event Object(매개변수 이름은 상관없으나 첫번째 매개변수는 event 객체로 활용)
- event가 발생한 것을 설명하는 여러 속성을 포함하는 object
- 속성에 data, target이 있다. target은 이벤트가 발생한 html 요소 객체를 잡아주는 역할

value 와 data의 차이(value는 html 요소의 값이고 data는 event의 값)
-value의 경우 해당 전체 값을 표현하지만 data의 경우 마지막으로 실행된 이벤트 발생으로 추가된 값에 대해서만 표현
ex) test / t

Variables vs Constant
- Variables: Variables where the stored value actually changes
- Constant: Variables where the value actually never changes

Constant여도 안의 속성은 바꿀 수 있다.

class 추가
- className = ''으로 추가한다. 단점은 이미 class가 있는 경우 그 class를 덮어써서 기존의 class를 제거한다.
- classList.add('')로 추가. / classList.remove('')로 제거.